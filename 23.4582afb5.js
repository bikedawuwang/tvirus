(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{354:function(t,e,n){var o=n(355);"string"==typeof o&&(o=[[t.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(5)(o,r);o.locals&&(t.exports=o.locals)},355:function(t,e,n){(t.exports=n(4)(!1)).push([t.i,".main-datashow-box .tv-card:not(:last-child) {\n  margin-bottom: 10px;\n}\n",""])},45:function(t,e,n){var o=n(46);"string"==typeof o&&(o=[[t.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(5)(o,r);o.locals&&(t.exports=o.locals)},46:function(t,e,n){(t.exports=n(4)(!1)).push([t.i,".main {\n  line-height: 2;\n}\n.main h2,\n.main h3,\n.main h4,\n.main h5,\n.main h6 {\n  clear: both;\n  margin: 1.6em 0 0.6em;\n  color: #0d1a26;\n  font-weight: 500;\n}\n.main h3 {\n  font-size: 24px;\n  line-height: 32px;\n}\n.main h4 {\n  font-size: 18px;\n}\n.main ul,\n.main ol,\n.main li {\n  padding: 0;\n  margin: 0;\n  list-style: none;\n}\n.main .tv-menu-item {\n  padding-left: 59px;\n}\n.main hr {\n  clear: both;\n  height: 1px;\n  margin: 56px 0;\n  background: #ebedf0;\n  border: 0;\n}\n.main blockquote {\n  margin: 1em 0;\n  padding-left: 0.8em;\n  color: #697b8c;\n  font-size: 90%;\n  border-left: 4px solid #ebedf0;\n}\n.main em,\n.main cite {\n  font-style: normal;\n}\n.main cite {\n  color: #929292;\n  font-size: 90%;\n}\n.main-component {\n  margin: 0 60px;\n  width: 800px;\n}\n.main-component .code-wraper {\n  box-shadow: 0 0 8px 2px rgba(0, 0, 0, 0.15);\n}\n.main-component .code-demo {\n  padding: 35px 35px 20px;\n}\n.main-component .code-demo .tv-button {\n  margin-right: 68px;\n  margin-bottom: 25px;\n}\n.main-component .code-demo .tv-button-group .tv-button {\n  margin-right: 0;\n}\n.main-component .code-block-control {\n  position: absolute;\n  left: 0;\n  right: 0;\n  border-top: 1px solid #eee;\n  padding-top: 6px;\n  color: #1d1d1d;\n  text-align: center;\n  cursor: pointer;\n}\n.main-component .language-jsx pre {\n  margin: 0;\n}\n",""])},477:function(t,e,n){"use strict";n.r(e),n.d(e,"default",function(){return f});var o=n(0),r=n.n(o),i=n(48),a=n(2);n(354);function l(t){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function c(){return(c=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o])}return t}).apply(this,arguments)}function s(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function p(t,e){return!e||"object"!==l(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function m(t){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function u(t,e){return(u=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var f=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=p(this,m(e).call(this,t))).state={line:{title:{text:"多条折线图模板",left:10,textStyle:{fontWeight:"normal",fontSize:16}},grid:{top:100,left:50,right:0,bottom:25},tooltip:{trigger:"axis"},legend:{left:10,top:40,itemWidth:10,itemHeight:10},xAxis:{type:"category",boundaryGap:!1,axisLine:{lineStyle:{color:"#e0e0e0"}},axisLabel:{color:"#333"},data:["周一","周二","周三","周四","周五","周六","周日"]},yAxis:{type:"value",axisLine:{show:!1},axisTick:{show:!1},splitLine:{show:!0,lineStyle:{type:"dashed",color:"#E9E9E9"}}},series:[{name:"差评率",type:"line",showSymbol:!1,smooth:!0,barWidth:20,itemStyle:{color:"#45a2fc"},data:[120,110,80,234,5,4]},{name:"好评率",type:"line",showSymbol:!1,smooth:!0,barWidth:20,itemStyle:{color:"#57ca77"},data:[110,10,120,124,95,204]}]},bar:{title:{text:"普通柱状图",left:10,textStyle:{fontWeight:"normal",fontSize:16}},grid:{top:100,left:50,right:0,bottom:25},tooltip:{trigger:"axis"},legend:{x:80,y:"top"},xAxis:{type:"category",axisLine:{lineStyle:{color:"#e0e0e0"}},axisTick:{show:!1},axisLabel:{color:"#333"},data:["周一","周二","周三","周四","周五","周六","周日"]},yAxis:{type:"value",axisLine:{show:!1},axisTick:{show:!1},splitLine:{show:!0,lineStyle:{type:"dashed",color:"#E9E9E9"}}},series:[{type:"bar",showSymbol:!1,smooth:!0,barWidth:20,itemStyle:{color:"#45a2fc"},data:[120,110,80,234,5,4]}]},bar2:{title:{text:"普通条形图",left:10,textStyle:{fontWeight:"normal",fontSize:16}},grid:{top:100,left:50,right:0,bottom:25},tooltip:{trigger:"axis"},legend:{x:80,y:"top"},xAxis:{type:"value",axisLine:{show:!1},axisTick:{show:!1},splitLine:{show:!0,lineStyle:{type:"dashed",color:"#E9E9E9"}}},yAxis:{type:"category",axisTick:{show:!1},axisLine:{lineStyle:{color:"#e0e0e0"}},axisLabel:{color:"#333"},data:["周一","周二","周三","周四","周五","周六","周日"]},series:[{type:"bar",showSymbol:!1,smooth:!0,barWidth:20,itemStyle:{color:"#45a2fc"},data:[120,110,80,234,5,4]}]},pie:{tooltip:{trigger:"item",formatter:"{b}: {c}<br />占比：{d}%"},legend:{orient:"horizontal",x:80,y:"top"},series:[{type:"pie",showSymbol:!1,smooth:!0,barWidth:20,data:[{name:"展会占比",value:20,itemStyle:{color:"#45a2fc"}},{name:"情侣出行占比",value:50,itemStyle:{color:"#57ca77"}},{name:"旅游占比",value:80,itemStyle:{color:"#fed465"}},{name:"家人出行占比",value:100,itemStyle:{color:"#9766e1"}},{name:"商务出行占比",value:130,itemStyle:{color:"#ff856a"}}]}]}},n}var n,l,f;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&u(t,e)}(e,o["Component"]),n=e,(l=[{key:"render",value:function(){return r.a.createElement(i.a,c({},this.props,{className:"main-datashow-box",title:"数据可视化",desc:r.a.createElement("div",null,"可视化语言让数据表达更符合用户心理，帮助『设计者』孵化出更具业务特性的可视化解决方案以满足个性化设计需求，屏蔽不必要的设计差异和实现成本，从而解放『设计者』和前端的研发资源，实现全面提高数据图表的研发效率。",r.a.createElement("br",null),"图表的作用是用来准确明了的向用户传递信息，所以装饰效果能不加则不加，简约至上。")}),r.a.createElement("h3",null,"展示"),r.a.createElement(a.Card,{className:"datashow1"},r.a.createElement(a.Chart,{option:this.state.line})),r.a.createElement(a.Card,{className:"datashow1"},r.a.createElement(a.Chart,{option:this.state.bar})),r.a.createElement(a.Card,{className:"datashow1"},r.a.createElement(a.Chart,{option:this.state.bar2})),r.a.createElement(a.Card,{className:"datashow1"},r.a.createElement(a.Chart,{option:this.state.pie,type:"pie"})))}}])&&s(n.prototype,l),f&&s(n,f),e}();f.displayName="DatashowDemo"},48:function(t,e,n){"use strict";n.d(e,"a",function(){return m});var o=n(0),r=n.n(o);n(2),n(45);function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function l(t,e){return!e||"object"!==i(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function s(t,e){return(s=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var p={main:{display:"flex"},left:{flexGrow:0,width:299,minWidth:299,maxWidth:299,height:"auto",borderRight:"1px solid #ebebeb"},right:{flexGrow:1,margin:"0 60px",width:800}},m=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=l(this,c(e).call(this,t))).state={children:null},n}var n,i,m;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&s(t,e)}(e,o["Component"]),n=e,(i=[{key:"onClick",value:function(t,e,n){e&&(n[t]=!0,this.props.history.push({pathname:e,state:{openMaps:n}}))}},{key:"opened",value:function(t){var e=this.props.location.pathname.split("/")[2];return console.log(e,t),e===t}},{key:"render",value:function(){var t=this.props,e=t.children,n=t.className,o=t.title,i=t.desc;return r.a.createElement("section",{style:p.right,className:"main-spec"},r.a.createElement("article",{className:n},r.a.createElement("h1",null,o),r.a.createElement("p",null,i),r.a.createElement("section",{className:"main-body"},e)))}}])&&a(n.prototype,i),m&&a(n,m),e}();m.displayName="Layout"}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{265:function(e,t,n){var r=n(266);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(7)(r,o);r.locals&&(e.exports=r.locals)},266:function(e,t,n){(e.exports=n(6)(!1)).push([e.i,"",""])},421:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return d});var r=n(0),o=n.n(r),i=n(48),a=n(50),l=n.n(a);n(265);function c(e){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(){return(u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(e,t){return!t||"object"!==c(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function f(e){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function m(e,t){return(m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var d=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=p(this,f(t).call(this,e))).state={childs:[]},n}var n,a,c;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&m(e,t)}(t,r["Component"]),n=t,(a=[{key:"componentWillMount",value:function(){this.childs()}},{key:"childs",value:function(){var e=[];e.push({doc:!0,title:"正常",children:o.a.createElement("div",null,o.a.createElement("p",null,"T-virus 提供一个 Provider 组件用于配置组件内部文案的语言。组件利用 context 实现对组件内部文案的配置，需要在应用最外层包裹使用。"),o.a.createElement("div",{className:"language-jsx"},o.a.createElement(l.a,null,"\n// 入口处，直接使用 I18nProvider 包裹\nimport { I18nProvider as Provider } from 'tvirus';\nimport enUS from './en-US'; // 自获取\n\n<Provider value={enUS}>\n    <App />\n</Provider>\n\n// 组件内使用\nimport { I18nReceiver as Receiver } from 'tvirus';\n<Receiver key={index} componentName=\"Select\">\n    {i18n => (\n        <span>{i18n[item.value]}</span>\n    )}\n</Receiver>\n                            ")),o.a.createElement("p",null,"需要遵循分类对应相应的数据。"),o.a.createElement("div",{className:"language-jsx"},o.a.createElement(l.a,null,"\nexport const Select = {\n    input: '请选择',\n    empty: '没有找到匹配项',\n};\n                            ")))}),this.setState({childs:e})}},{key:"render",value:function(){var e=this.state.childs;return o.a.createElement(i.a,u({},this.props,{className:"main-i18n-box",title:"国际化",desc:"T-virus 目前的默认文案是中文，如果需要使用其他语言，可以参考下面的方案。",childs:e}))}}])&&s(n.prototype,a),c&&s(n,c),t}();d.displayName="I18nDemo"},46:function(e,t,n){var r=n(47);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(7)(r,o);r.locals&&(e.exports=r.locals)},47:function(e,t,n){(e.exports=n(6)(!1)).push([e.i,".main {\n  line-height: 2;\n}\n.main h2,\n.main h3,\n.main h4,\n.main h5,\n.main h6 {\n  clear: both;\n  margin: 1.6em 0 0.6em;\n  color: #0d1a26;\n  font-weight: 500;\n}\n.main h3 {\n  font-size: 24px;\n  line-height: 32px;\n}\n.main ul,\n.main ol,\n.main li {\n  padding: 0;\n  margin: 0;\n  list-style: none;\n}\n.main .tv-menu-item {\n  padding-left: 59px;\n}\n.main hr {\n  clear: both;\n  height: 1px;\n  margin: 56px 0;\n  background: #ebedf0;\n  border: 0;\n}\n.main blockquote {\n  margin: 1em 0;\n  padding-left: 0.8em;\n  color: #697b8c;\n  font-size: 90%;\n  border-left: 4px solid #ebedf0;\n}\n.main cite {\n  color: #697b8c;\n  font-size: 90%;\n}\n.main-component {\n  margin: 0 60px;\n  width: 800px;\n}\n.main-component .code-wraper {\n  box-shadow: 0 0 8px 2px rgba(0, 0, 0, 0.15);\n}\n.main-component .code-demo {\n  padding: 35px 35px 20px;\n}\n.main-component .code-demo .tv-button {\n  margin-right: 68px;\n  margin-bottom: 25px;\n}\n.main-component .code-demo .tv-button-group .tv-button {\n  margin-right: 0;\n}\n.main-component .code-block-control {\n  border-top: 1px solid #eee;\n  height: 56px;\n  line-height: 56px;\n  color: #1d1d1d;\n  text-align: center;\n}\n.main-component .language-jsx pre {\n  margin: 0;\n}\n",""])},48:function(e,t,n){"use strict";var r=n(0),o=n.n(r),i=n(50),a=n.n(i),l=n(51),c=n.n(l),u=n(3);function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(e,t){return!t||"object"!==s(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function m(e){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e,t){return(d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var y={main:{display:"flex"},left:{flexGrow:0,width:299,minWidth:299,maxWidth:299,height:"auto",borderRight:"1px solid #ebebeb"},right:{flexGrow:1}},h=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=f(this,m(t).call(this,e))).state={childs:[],controlTitle:"显示",codebox:{}},n}var n,i,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)}(t,r["Component"]),n=t,l=[{key:"getDerivedStateFromProps",value:function(e,t){if(JSON.stringify(e.childs)!==JSON.stringify(t.childs))return{childs:e.childs}}}],(i=[{key:"onShowCode",value:function(e){var t,n,r,o=(this.state.codebox[e]||{}).show,i=(r={show:!o},(n=e)in(t={})?Object.defineProperty(t,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[n]=r,t);this.setState({codebox:i})}},{key:"getCodeDemo",value:function(e,t){var n=this,r=!!(this.state.codebox[t]||{}).show;return Array.isArray(e.children)?o.a.createElement(u.Tabs,{activeKey:e.children[0]},e.children.map(function(t,i){var l=e.func(t);return o.a.createElement(u.Tabpanel,{key:i,tab:t,tabKey:t},l,o.a.createElement("div",{className:"language-jsx",style:{display:r?"":"none"}},o.a.createElement(a.a,null,c()(l,{tabStop:4}))),o.a.createElement("div",{className:"code-block-control",onClick:n.onShowCode.bind(n,i)},r?"隐藏":"展示"))})):o.a.createElement("div",null,e.children,o.a.createElement("div",{className:"language-jsx",style:{display:r?"":"none"}},o.a.createElement(a.a,null,e.jsx||c()(e.children,{tabStop:4}))),o.a.createElement("div",{className:"code-block-control",onClick:this.onShowCode.bind(this,t)},r?"隐藏":"展示"))}},{key:"creatDoc",value:function(e){return o.a.createElement("div",null,e.children)}},{key:"render",value:function(){var e=this,t=this.props,n=t.title,r=t.desc,i=t.className,a=this.state.childs;return o.a.createElement("section",{style:y.right,className:"main-component"},o.a.createElement("article",{className:i},o.a.createElement("h1",null,n),o.a.createElement("p",null,r),o.a.createElement("section",{className:"main-body"},a.map(function(t,n){return o.a.createElement("div",{key:n},o.a.createElement("h2",null,t.title),t.doc?e.creatDoc(t,n):o.a.createElement(u.Card,null,e.getCodeDemo(t,n)))}))))}}])&&p(n.prototype,i),l&&p(n,l),t}();h.displayName="Body";var b=h;n(46);function v(e){return(v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function x(e,t){return!t||"object"!==v(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function w(e){return(w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function E(e,t){return(E=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}n.d(t,"a",function(){return O});var S={main:{display:"flex"},left:{flexGrow:0,width:299,minWidth:299,maxWidth:299,height:"auto",borderRight:"1px solid #ebebeb"},right:{flexGrow:1}},O=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=x(this,w(t).call(this,e))).state={childs:[],controlTitle:"显示",codebox:{}},n}var n,i,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&E(e,t)}(t,r["Component"]),n=t,a=[{key:"getDerivedStateFromProps",value:function(e,t){if(JSON.stringify(e.childs)!==JSON.stringify(t.childs))return{childs:e.childs}}}],(i=[{key:"onClick",value:function(e,t,n){t&&(n[e]=!0,this.props.history.push({pathname:t,state:{openMaps:n}}))}},{key:"opened",value:function(e){var t=this.props.location.pathname.split("/")[2];return console.log(t,e),t===e}},{key:"createMenus",value:function(){var e=this;return[{title:"开发指南",child:[{title:"快速上手",query:"install"},{title:"国际化",query:"i18n"}]},{title:"基础",child:[{title:"Grid 栅格",query:"grid"},{title:"Button 按钮",query:"button"},{title:"Icon 图标",query:"icon"}]},{title:"表单",child:[{title:"Input 输入框",query:"input"},{title:"Search 搜索框",query:"search"},{title:"Sliderbar 滑动块",query:"sliderbar"},{title:"Radio 单选",query:"radio"},{title:"Switch 开关",query:"switch"},{title:"Checkbox 多选项",query:"checkbox"},{title:"Select 下拉菜单",query:"select"},{title:"Cascader 级联菜单",query:"cascader"},{title:"Datepicker 日期控件",query:"datepicker"}]},{title:"导航",child:[{title:"Menu 菜单",query:"menu"},{title:"Breadcrumb 面包屑",query:"breadcrumb"},{title:"Pagination 分页",query:"pagination"},{title:"Tabs 选项卡",query:"tabs"}]},{title:"数据展示",child:[{title:"Badge 徽标",query:"badge"},{title:"Table 表格",query:"table"},{title:"Popup 弹出",query:"popup"},{title:"Chart 图表",query:"chart"},{title:"Dialog 对话框",query:"dialog"},{title:"Message 全局提示",query:"message"},{title:"Progress 进度条",query:"progress"},{title:"Card 卡片",query:"card"}]}].map(function(t){var n=o.a.createElement("span",null,t.title),r=t.child.map(function(t){var n=e.opened(t.query);return o.a.createElement(u.Menu.Item,{opened:n,to:"/component/".concat(t.query)},t.title)});return o.a.createElement(u.Menu.SubMenu,{title:n},r)})}},{key:"render",value:function(){this.props.location.state;return o.a.createElement("main",{style:S.main,className:"main"},o.a.createElement("aside",{style:S.left},o.a.createElement(u.Menu,{className:"tv-menu-vertical-demo",onClick:this.onClick.bind(this)},this.createMenus())),o.a.createElement(b,this.props))}}])&&g(n.prototype,i),a&&g(n,a),t}();O.displayName="Layout"}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
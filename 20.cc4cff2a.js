(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{259:function(e,t,n){var a=n(260);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(6)(a,r);a.locals&&(e.exports=a.locals)},260:function(e,t,n){(e.exports=n(5)(!1)).push([e.i,"",""])},420:function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return p});var a=n(0),r=n.n(a),o=n(62),c=n(3);n(259);function l(e){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function s(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function u(e,t){return!t||"object"!==l(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var p=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=u(this,d(t).call(this,e))).state={childs:[]},n}var n,l,p;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(t,a["Component"]),n=t,(l=[{key:"componentWillMount",value:function(){this.childs()}},{key:"childs",value:function(){var e=[];e.push({title:"正常",children:r.a.createElement("div",{className:"code-demo"},r.a.createElement(c.Badge,{count:10,style:{marginRight:30}},r.a.createElement("span",{style:{width:40,height:40,display:"block",background:"#999"}})),r.a.createElement(c.Badge,{count:30,style:{marginRight:30}},r.a.createElement("span",{style:{width:40,height:40,display:"block",background:"#999"}})),r.a.createElement(c.Badge,{count:1e3},r.a.createElement("span",{style:{width:40,height:40,display:"block",background:"#999"}})))}),e.push({title:"小点",children:r.a.createElement("div",{className:"code-demo"},r.a.createElement(c.Badge,null,r.a.createElement(c.Icon,{type:"email"})))}),e.push({title:"状态点",children:r.a.createElement("div",{className:"code-demo"},r.a.createElement("div",null,r.a.createElement(c.Badge,{status:"success"},"success")),r.a.createElement("div",null,r.a.createElement(c.Badge,{status:"info"},"info")),r.a.createElement("div",null,r.a.createElement(c.Badge,{status:"warning"},"warning")),r.a.createElement("div",null,r.a.createElement(c.Badge,{status:"danger"},"danger")),r.a.createElement("h5",null,"自定义"),r.a.createElement("div",null,r.a.createElement(c.Badge,{status:"color",color:"#722ed1"},"#722ed1")))}),this.setState({childs:e})}},{key:"render",value:function(){var e=this.state.childs;return r.a.createElement(o.a,i({},this.props,{className:"main-card-box",title:"Card",desc:"卡片是一种承载信息的容器，对可承载的内容类型无过多限制，它让一类信息集中化，增强区块感的同时更易于操作。",childs:e}))}}])&&s(n.prototype,l),p&&s(n,p),t}();p.displayName="BadgeDemo"}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{372:function(e,n,t){var r=t(373);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(7)(r,o);r.locals&&(e.exports=r.locals)},373:function(e,n,t){var r=t(16);(e.exports=t(6)(!1)).push([e.i,".margin1 {\n  height: 999px;\n  background: url("+r(t(374))+") no-repeat 0 0;\n}\n.margin2 {\n  height: 217px;\n  background: url("+r(t(375))+") no-repeat 0 0;\n}\n.margin3 {\n  height: 176px;\n  background: url("+r(t(376))+") no-repeat 0 0;\n}\n",""])},374:function(e,n,t){e.exports=t.p+"0641178764dc97981e3765258ad6fcd5.png"},375:function(e,n,t){e.exports=t.p+"ac4371726609bba3a6b49605251df7c1.png"},376:function(e,n,t){e.exports=t.p+"83a40b2654e5b7c5940714ef8e5a1913.png"},451:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return m});var r=t(0),o=t.n(r),i=t(49);t(372);function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(){return(l=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function c(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e,n){return!n||"object"!==a(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function p(e){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function s(e,n){return(s=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var m=function(e){function n(e){return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),u(this,p(n).call(this,e))}var t,a,m;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&s(e,n)}(n,r["Component"]),t=n,(a=[{key:"render",value:function(){return o.a.createElement(i.a,l({},this.props,{className:"main-margin-box",title:"间距",desc:"根据接近法则，如果信息之间关联性越高，它们之间的距离就应该越接近，也越像一个视觉单元；反之，则它们的距离就应该越远，也越像多个视觉单元。通过允许用户一目了然的对不同内容进行归组，来提升易读性。"}),o.a.createElement("h3",null,"纵向间距关系"),o.a.createElement("p",null,"通过『小号间距』、『中号间距』、『大号间距』这三种规格来划分信息层次,10px（小号间距）、20px（中号间距）、30px（大号间距）。在这三种规格不适用的情况下，可以通过加减『基础间距』的倍数，或者增加元素来拉开信息层次。",o.a.createElement("cite",null,"注：y=10+10*n。其中，n>=0，y 是纵向间距，10 是『基础间距』。")),o.a.createElement("div",{className:"margin1"}),o.a.createElement("h3",null,"横向间距关系"),o.a.createElement("p",null,"为了适用不同尺寸的屏幕，在横向采用栅格布局来排布组件，从而保证布局的灵活性。"),o.a.createElement("div",{className:"margin2"}),o.a.createElement("p",null,"在一个组件内部，元素的横向间距也应该有所不同。"),o.a.createElement("div",{className:"margin3"}))}}])&&c(t.prototype,a),m&&c(t,m),n}();m.displayName="MarginDemo"},46:function(e,n,t){var r=t(47);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(7)(r,o);r.locals&&(e.exports=r.locals)},47:function(e,n,t){(e.exports=t(6)(!1)).push([e.i,".main {\n  line-height: 2;\n}\n.main h2,\n.main h3,\n.main h4,\n.main h5,\n.main h6 {\n  clear: both;\n  margin: 1.6em 0 0.6em;\n  color: #0d1a26;\n  font-weight: 500;\n}\n.main h3 {\n  font-size: 24px;\n  line-height: 32px;\n}\n.main ul,\n.main ol,\n.main li {\n  padding: 0;\n  margin: 0;\n  list-style: none;\n}\n.main .tv-menu-item {\n  padding-left: 59px;\n}\n.main hr {\n  clear: both;\n  height: 1px;\n  margin: 56px 0;\n  background: #ebedf0;\n  border: 0;\n}\n.main blockquote {\n  margin: 1em 0;\n  padding-left: 0.8em;\n  color: #697b8c;\n  font-size: 90%;\n  border-left: 4px solid #ebedf0;\n}\n.main cite {\n  color: #697b8c;\n  font-size: 90%;\n}\n.main-component {\n  margin: 0 60px;\n  width: 800px;\n}\n.main-component .code-wraper {\n  box-shadow: 0 0 8px 2px rgba(0, 0, 0, 0.15);\n}\n.main-component .code-demo {\n  padding: 35px 35px 20px;\n}\n.main-component .code-demo .tv-button {\n  margin-right: 68px;\n  margin-bottom: 25px;\n}\n.main-component .code-demo .tv-button-group .tv-button {\n  margin-right: 0;\n}\n.main-component .code-block-control {\n  border-top: 1px solid #eee;\n  height: 56px;\n  line-height: 56px;\n  color: #1d1d1d;\n  text-align: center;\n}\n.main-component .language-jsx pre {\n  margin: 0;\n}\n",""])},49:function(e,n,t){"use strict";t.d(n,"a",function(){return m});var r=t(0),o=t.n(r),i=t(3);t(46);function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(e,n){return!n||"object"!==a(n)&&"function"!=typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function p(e,n){return(p=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var s={main:{display:"flex"},left:{flexGrow:0,width:299,minWidth:299,maxWidth:299,height:"auto",borderRight:"1px solid #ebebeb"},right:{flexGrow:1,margin:"0 60px",width:800}},m=function(e){function n(e){var t;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(t=c(this,u(n).call(this,e))).state={children:null},t}var t,a,m;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&p(e,n)}(n,r["Component"]),t=n,(a=[{key:"onClick",value:function(e,n,t){n&&(t[e]=!0,this.props.history.push({pathname:n,state:{openMaps:t}}))}},{key:"opened",value:function(e){var n=this.props.location.pathname.split("/")[2];return console.log(n,e),n===e}},{key:"createMenus",value:function(){var e=this;return[{title:"设计原则",child:[{title:"人文体验",query:"arts"},{title:"直接了当",query:"direct"},{title:"减少跳转",query:"jump"},{title:"化繁为简",query:"lightweight"},{title:"提供邀请",query:"invitation"},{title:"即时反映",query:"reaction"}]},{title:"设计规范",child:[{title:"间距",query:"margin"},{title:"对齐",query:"align"},{title:"颜色",query:"color"},{title:"布局",query:"layout"},{title:"字体",query:"font"},{title:"图标",query:"icon"},{title:"文案",query:"text"},{title:"数据录入",query:"data"},{title:"数据展示",query:"datashow"},{title:"数据可视化",query:"datavis"},{title:"信息反馈",query:"notice"},{title:"微动效",query:"animation"}]}].map(function(n){var t=o.a.createElement("span",null,n.title),r=n.child.map(function(n){var t=e.opened(n.query);return o.a.createElement(i.Menu.Item,{opened:t,to:"/spec/".concat(n.query)},n.title)});return o.a.createElement(i.Menu.SubMenu,{title:t},r)})}},{key:"render",value:function(){var e=this.props,n=e.children,t=e.className,r=e.title,a=e.desc;return o.a.createElement("main",{style:s.main,className:"main"},o.a.createElement("aside",{style:s.left},o.a.createElement(i.Menu,{className:"tv-menu-vertical-demo",onClick:this.onClick.bind(this)},this.createMenus())),o.a.createElement("section",{style:s.right,className:"main-spec"},o.a.createElement("article",{className:t},o.a.createElement("h1",null,r),o.a.createElement("p",null,a),o.a.createElement("section",{className:"main-body"},n))))}}])&&l(t.prototype,a),m&&l(t,m),n}();m.displayName="Layout"}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
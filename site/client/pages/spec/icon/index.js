import React, { Component } from 'react';
import Layout from '../../../common/design';

import './index.less'

export default class IconPageDemo extends Component{
    constructor(props){
        super(props);
    }

    render() {
        return <Layout {...this.props} 
            className="main-icon-box"
            title="图标"
            desc={
                <div>
                    设计美观、一致、易用、便于延展的图标，遵循四个设计原则：<br />
                    1.准确： 设计造型准确的图标（保持偶数原则，去小数点）；选择表意准确的图标，不对用户的认知造成困扰。<br />
                    2.简单： 在表意清晰准确的基础上，尽量保持图形的简洁，不做多余的修饰。<br />
                    3.节奏： 挖掘构图中的秩序之美。<br />
                    4.愉悦： 赋予适度的情感
                </div>
            }
        >
            
            <h3>设计规格</h3>
            <div className="icon1"></div>

            <h3>元素</h3>
            <p>1.点： 点是很多图形中都会出现的元素。对于点的尺寸选择上会保持 16 的倍数这一原则。比如，在点的选择中，最常用的是四种尺寸的点，分别为 80、96、112、128。当出现特殊尺寸的需求时，会按照 16 的倍数进行延展。<br />
            2.线： 线条也是非常通用的元素之一。新版图标在线条之间的关系采用 8 倍数原则，从小到大以 8 的规律递增。常用的规格也是4 种，分别为 56、64、72、80。</p>
            <div className="icon2"></div>
            <p>
            3.圆角： 圆角的规格采取的也是 8 倍数原则，最常用的是 3 种，分别是 8，16、32，它们之间是两倍数的关系。而图标内部空间的圆角则保持直角的处理方式。<br />
            4.三角： 常用的角度定在约 76 度。在日常设计中，多数系统图标的角度都可以从 76 度这个数值出发，根据实际情况进行灵活的应用。<br />
            5.箭头：在顶角大约保持 76 度的基础上，最常用的为 4 种，他们的宽度保持 8 倍数的原则，间隔为 24 。
            </p>

            <h3>平衡</h3>
            <p>
            弯曲的线条会比竖直的线条看起来细。 因此在圆形的外边框上我们会适当的对 72px 的规格进行 4 px 的微调。<br />倾斜的线条也会比竖直的线条看起来细。 因此倾斜的线条也会进行 4 px 的微调图形的留白空间也是值得推敲的课题。 当某些图形的留白不足时，可以通过调节线条的粗细来达到视觉重量上的平衡。
            </p>
            <div className="icon3"></div>

            <h3>辨识</h3>
            <p>
            辨识度是一套图标具备的可被感知的特色<br />让科技有温度： 通过对于图形圆角的定义，将过于圆润的圆角（72）调整至（32），在视觉效果上令图标看起来更为坚硬和理性（对应科技感），但又不至于太过尖锐（有温度）。<br />让图形有生命： 在部分图标设计中，会适度的注入拟人化的元素，令图标具备生命力。
            </p>
            <div className="icon4"></div>
            <h3>好的习惯</h3>
            <p>在完成图标设计后，保持图形的整洁，图层结构的清晰，也是构筑图标体系必不可少的部分，保持良好的作图习惯。<br />1.干掉多余的节点，保持图形的整洁。<br />2.合并图形，便于输出。<br />3.对小数点以及奇数进行最后一遍的走查与修正。<br />4.图层整洁易管理。</p>
        </Layout>
    }
}
